

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Aug  7 08:24:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bootloader,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0000                     INDF            equ	0	;# 
   173     0001                     TMR0            equ	1	;# 
   174     0002                     PCL             equ	2	;# 
   175     0003                     STATUS          equ	3	;# 
   176     0004                     FSR             equ	4	;# 
   177     0005                     PORTA           equ	5	;# 
   178     0006                     PORTB           equ	6	;# 
   179     0007                     PORTC           equ	7	;# 
   180     0008                     PORTD           equ	8	;# 
   181     0009                     PORTE           equ	9	;# 
   182     000A                     PCLATH          equ	10	;# 
   183     000B                     INTCON          equ	11	;# 
   184     000C                     PIR1            equ	12	;# 
   185     000D                     PIR2            equ	13	;# 
   186     000E                     TMR1            equ	14	;# 
   187     000E                     TMR1L           equ	14	;# 
   188     000F                     TMR1H           equ	15	;# 
   189     0010                     T1CON           equ	16	;# 
   190     0011                     TMR2            equ	17	;# 
   191     0012                     T2CON           equ	18	;# 
   192     0013                     SSPBUF          equ	19	;# 
   193     0014                     SSPCON          equ	20	;# 
   194     0015                     CCPR1           equ	21	;# 
   195     0015                     CCPR1L          equ	21	;# 
   196     0016                     CCPR1H          equ	22	;# 
   197     0017                     CCP1CON         equ	23	;# 
   198     0018                     RCSTA           equ	24	;# 
   199     0019                     TXREG           equ	25	;# 
   200     001A                     RCREG           equ	26	;# 
   201     001B                     CCPR2           equ	27	;# 
   202     001B                     CCPR2L          equ	27	;# 
   203     001C                     CCPR2H          equ	28	;# 
   204     001D                     CCP2CON         equ	29	;# 
   205     001E                     ADRESH          equ	30	;# 
   206     001F                     ADCON0          equ	31	;# 
   207     0081                     OPTION_REG      equ	129	;# 
   208     0085                     TRISA           equ	133	;# 
   209     0086                     TRISB           equ	134	;# 
   210     0087                     TRISC           equ	135	;# 
   211     0088                     TRISD           equ	136	;# 
   212     0089                     TRISE           equ	137	;# 
   213     008C                     PIE1            equ	140	;# 
   214     008D                     PIE2            equ	141	;# 
   215     008E                     PCON            equ	142	;# 
   216     0091                     SSPCON2         equ	145	;# 
   217     0092                     PR2             equ	146	;# 
   218     0093                     SSPADD          equ	147	;# 
   219     0094                     SSPSTAT         equ	148	;# 
   220     0098                     TXSTA           equ	152	;# 
   221     0099                     SPBRG           equ	153	;# 
   222     009C                     CMCON           equ	156	;# 
   223     009D                     CVRCON          equ	157	;# 
   224     009E                     ADRESL          equ	158	;# 
   225     009F                     ADCON1          equ	159	;# 
   226     010C                     EEDATA          equ	268	;# 
   227     010D                     EEADR           equ	269	;# 
   228     010E                     EEDATH          equ	270	;# 
   229     010F                     EEADRH          equ	271	;# 
   230     018C                     EECON1          equ	396	;# 
   231     018D                     EECON2          equ	397	;# 
   232     001A                     _RCREG          set	26
   233     0019                     _TXREG          set	25
   234     000B                     _INTCONbits     set	11
   235     00C1                     _OERR           set	193
   236     00C2                     _FERR           set	194
   237     0065                     _RCIF           set	101
   238     00C4                     _CREN           set	196
   239     00C6                     _RX9            set	198
   240     00C7                     _SPEN           set	199
   241     0099                     _SPBRG          set	153
   242     04C5                     _TXEN           set	1221
   243     04C1                     _TRMT           set	1217
   244     04C6                     _TX9            set	1222
   245     04C4                     _SYNC           set	1220
   246     04C2                     _BRGH           set	1218
   247     010C                     _EEDATA         set	268
   248     010E                     _EEDATH         set	270
   249     010D                     _EEADR          set	269
   250     010F                     _EEADRH         set	271
   251     018D                     _EECON2         set	397
   252     018C                     _EECON1bits     set	396
   253                           
   254                           	psect	cinit
   255     0003                     start_initialization:	
   256                           ; #config settings
   257                           
   258     0003                     __initialization:
   259     0003                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262     0003                     __end_of__initialization:
   263     0003  0183               	clrf	3
   264     0004  120A  118A  2808   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	cstackCOMMON
   267     0070                     __pcstackCOMMON:
   268     0070                     ?_write_page:
   269     0070                     ?_boot_loader:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     write_page@data:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 2 bytes @ 0x0
   280     0070                     	ds	2
   281     0072                     write_page@addressH:
   282                           
   283                           ; 1 bytes @ 0x2
   284     0072                     	ds	1
   285     0073                     write_page@addressL:
   286                           
   287                           ; 1 bytes @ 0x3
   288     0073                     	ds	1
   289     0074                     boot_loader@i:
   290     0074                     ??_write_page:	
   291                           ; 2 bytes @ 0x4
   292                           
   293     0074                     ??_boot_loader:	
   294                           ; 1 bytes @ 0x4
   295                           
   296                           
   297                           ; 1 bytes @ 0x4
   298     0074                     	ds	2
   299     0076                     ??_main:
   300                           
   301                           	psect	bootloader
   302     0008                     __pbootloader:	
   303                           ; 1 bytes @ 0x6
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 48 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0
   326 ;;      Totals:         0       0       0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels required when called: 2
   329 ;; This function calls:
   330 ;;		_boot_loader
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336     0008                     _main:	
   337                           ;psect for function _main
   338                           
   339     0008                     l712:	
   340                           ;incstack = 0
   341                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   342                           
   343                           
   344                           ;main.c: 50:     boot_loader();
   345     0008  120A  118A  2010  120A  118A  	fcall	_boot_loader
   346     000D                     l26:
   347     000D  120A  118A  2800   	ljmp	start
   348     0010                     __end_of_main:
   349     0010                     _boot_loader:	
   350 ;; *************** function _boot_loader *****************
   351 ;; Defined at:
   352 ;;		line 37 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  i               2    4[COMMON] unsigned short 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         2       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         2       0       0       0       0
   370 ;;Total ram usage:        2 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 1
   373 ;; This function calls:
   374 ;;		_write_page
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380     0010                     l702:	
   381                           ;incstack = 0
   382                           ; Regs used in _boot_loader: [wreg+status,2+status,0+pclath+cstack]
   383                           
   384                           
   385                           ;main.c: 40:      for(uint16_t i = 0x0100; i < 0x1000; i++)
   386     0010  3000               	movlw	0
   387     0011  00F4               	movwf	boot_loader@i
   388     0012  3001               	movlw	1
   389     0013  00F5               	movwf	boot_loader@i+1
   390     0014                     l706:
   391                           
   392                           ;main.c: 41:         {;main.c: 42:            write_page(0x0000,(i&0xff), (i>>8));
   393     0014  3000               	movlw	0
   394     0015  00F0               	movwf	write_page@data
   395     0016  00F1               	movwf	write_page@data+1
   396     0017  0874               	movf	boot_loader@i,w
   397     0018  00F2               	movwf	write_page@addressH
   398     0019  0875               	movf	boot_loader@i+1,w
   399     001A  00F3               	movwf	write_page@addressL
   400     001B  120A  118A  2030  120A  118A  	fcall	_write_page
   401     0020                     l708:
   402                           
   403                           ;main.c: 43:         }
   404     0020  3001               	movlw	1
   405     0021  07F4               	addwf	boot_loader@i,f
   406     0022  1803               	skipnc
   407     0023  0AF5               	incf	boot_loader@i+1,f
   408     0024  3000               	movlw	0
   409     0025  07F5               	addwf	boot_loader@i+1,f
   410     0026                     l710:
   411     0026  3010               	movlw	16
   412     0027  0275               	subwf	boot_loader@i+1,w
   413     0028  3000               	movlw	0
   414     0029  1903               	skipnz
   415     002A  0274               	subwf	boot_loader@i,w
   416     002B  1C03               	skipc
   417     002C  282E               	goto	u91
   418     002D  282F               	goto	u90
   419     002E                     u91:
   420     002E  2814               	goto	l706
   421     002F                     u90:
   422     002F                     l21:
   423     002F  0008               	return
   424     0030                     __end_of_boot_loader:
   425     0030                     _write_page:	
   426 ;; *************** function _write_page *****************
   427 ;; Defined at:
   428 ;;		line 54 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  data            2    0[COMMON] unsigned short 
   431 ;;  addressH        1    2[COMMON] unsigned char 
   432 ;;  addressL        1    3[COMMON] unsigned char 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         4       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         4       0       0       0       0
   448 ;;Total ram usage:        4 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_boot_loader
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457     0030                     l680:	
   458                           ;incstack = 0
   459                           ; Regs used in _write_page: [wreg+status,2]
   460                           
   461     0030                     l29:	
   462                           ;main.c: 54: void __attribute__((section("bootloader")))write_page(uint16_t data, uint8_
      +                          t addressH, uint8_t addressL);main.c: 55: {;main.c: 56:     while(EECON1bits.WR);
   463                           
   464     0030  1683               	bsf	3,5	;RP0=1, select bank3
   465     0031  1703               	bsf	3,6	;RP1=1, select bank3
   466     0032  188C               	btfsc	12,1	;volsfr
   467     0033  2835               	goto	u81
   468     0034  2836               	goto	u80
   469     0035                     u81:
   470     0035  2830               	goto	l29
   471     0036                     u80:
   472     0036                     l682:
   473                           
   474                           ;main.c: 58:     EEADRH = addressH;
   475     0036  0872               	movf	write_page@addressH,w
   476     0037  1283               	bcf	3,5	;RP0=0, select bank2
   477     0038  1703               	bsf	3,6	;RP1=1, select bank2
   478     0039  008F               	movwf	15	;volatile
   479                           
   480                           ;main.c: 59:     EEADR = addressL;
   481     003A  0873               	movf	write_page@addressL,w
   482     003B  008D               	movwf	13	;volatile
   483     003C                     l684:
   484                           
   485                           ;main.c: 61:     EEDATH = (data>>8);
   486     003C  0871               	movf	write_page@data+1,w
   487     003D  008E               	movwf	14	;volatile
   488     003E                     l686:
   489                           
   490                           ;main.c: 62:     EEDATA = (data&0xFF);
   491     003E  0870               	movf	write_page@data,w
   492     003F  008C               	movwf	12	;volatile
   493     0040                     l688:
   494                           
   495                           ;main.c: 64:     EECON1bits.EEPGD = 0x01;
   496     0040  1683               	bsf	3,5	;RP0=1, select bank3
   497     0041  1703               	bsf	3,6	;RP1=1, select bank3
   498     0042  178C               	bsf	12,7	;volsfr
   499     0043                     l690:
   500                           
   501                           ;main.c: 65:     EECON1bits.WREN = 0x01;
   502     0043  150C               	bsf	12,2	;volsfr
   503     0044                     l692:
   504                           
   505                           ;main.c: 66:     INTCONbits.GIE = 0x00;
   506     0044  138B               	bcf	11,7	;volatile
   507     0045                     l694:
   508                           
   509                           ;main.c: 68:     EECON2 = 0x55;
   510     0045  3055               	movlw	85
   511     0046  008D               	movwf	13	;volsfr
   512     0047                     l696:
   513                           
   514                           ;main.c: 69:     EECON2 = 0xAA;
   515     0047  30AA               	movlw	170
   516     0048  008D               	movwf	13	;volsfr
   517     0049                     l698:
   518                           
   519                           ;main.c: 70:     EECON1bits.WR = 0x01;
   520     0049  148C               	bsf	12,1	;volsfr
   521     004A  0000               	nop	;# 
   522     004B  0000               	nop	;# 
   523     004C                     l700:
   524                           
   525                           ;main.c: 75:     EECON1bits.WREN = 0x00;
   526     004C  1683               	bsf	3,5	;RP0=1, select bank3
   527     004D  1703               	bsf	3,6	;RP1=1, select bank3
   528     004E  110C               	bcf	12,2	;volsfr
   529     004F                     l32:
   530     004F  0008               	return
   531     0050                     __end_of_write_page:
   532     0002                     ___latbits      equ	2
   533     007E                     btemp           set	126	;btemp
   534     007E                     wtemp0          set	126
   535                           
   536                           	psect	config
   537                           
   538                           ;Config register CONFIG @ 0x2007
   539                           ;	Oscillator Selection bits
   540                           ;	FOSC = XT, XT oscillator
   541                           ;	Watchdog Timer Enable bit
   542                           ;	WDTE = OFF, WDT disabled
   543                           ;	Power-up Timer Enable bit
   544                           ;	PWRTE = OFF, PWRT disabled
   545                           ;	Brown-out Reset Enable bit
   546                           ;	BOREN = OFF, BOR disabled
   547                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   548                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   549                           ;	Data EEPROM Memory Code Protection bit
   550                           ;	CPD = OFF, Data EEPROM code protection off
   551                           ;	Flash Program Memory Write Enable bits
   552                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   553                           ;	In-Circuit Debugger Mode bit
   554                           ;	DEBUG = 0x1, unprogrammed default
   555                           ;	Flash Program Memory Code Protection bit
   556                           ;	CP = OFF, Code protection off
   557     2007                     	org	8199
   558     2007  3FB9               	dw	16313

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_boot_loader
    _boot_loader->_write_page

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     181
                        _boot_loader
 ---------------------------------------------------------------------------------
 (1) _boot_loader                                          2     2      0     181
                                              4 COMMON     2     2      0
                         _write_page
 ---------------------------------------------------------------------------------
 (2) _write_page                                           4     0      4      91
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot_loader
     _write_page

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      6       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Aug  7 08:24:44 2025

           ?_boot_loader 0070                       l21 002F                       l32 004F  
                     l26 000D                       l29 0030                       u80 0036  
                     u81 0035                       u90 002F                       u91 002E  
                    l700 004C                      l710 0026                      l702 0010  
                    l712 0008                      l706 0014                      l708 0020  
                    l680 0030                      l690 0043                      l682 0036  
                    l692 0044                      l684 003C                      l694 0045  
                    l686 003E                      l696 0047                      l688 0040  
                    l698 0049                      _RX9 00C6                      _TX9 04C6  
                   _BRGH 04C2                     _CREN 00C4                     _FERR 00C2  
                   _RCIF 0065                     _OERR 00C1                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
                   _main 0008                     btemp 007E                     start 0000  
                  ?_main 0070                    _EEADR 010D                    _RCREG 001A  
                  _SPBRG 0099                    _TXREG 0019           write_page@data 0070  
           boot_loader@i 0074                    status 0003                    wtemp0 007E  
        __initialization 0003             __end_of_main 0010                   ??_main 0076  
                 _EEADRH 010F                   _EEDATA 010C                   _EEDATH 010E  
                 _EECON2 018D  __end_of__initialization 0003           __pcstackCOMMON 0070  
           __pbootloader 0008     end_of_initialization 0003            ??_boot_loader 0074  
             _write_page 0030      start_initialization 0003      __end_of_boot_loader 0030  
              ___latbits 0002       write_page@addressH 0072       write_page@addressL 0073  
            ?_write_page 0070              _boot_loader 0010               _EECON1bits 018C  
             _INTCONbits 000B             ??_write_page 0074       __end_of_write_page 0050  
